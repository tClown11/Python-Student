客户端脚本语言是运行在浏览器而非服务器上的语言。客户端语言成功的前提是浏览器拥有正确地解释和执行这类语言的能力。

    在一定程度上，由于很难让所有浏览器开发商都认可同一个标准，所以客户端语言比服务器端语言要少很多。

    通常，你在网上遇到的客户端语言只有两种：ActionScript（开发Flash应用的语言）和JavaScript。今天ActionScript的使用率比10年前低很多，经常用于流媒体文件播放，用作在线游戏平台，或者是网站上那些没人想看更没有人点击的“介绍”页面。


tips： 强类型：偏向于不容忍隐式类型转换。譬如说haskell的int就不能变成double
       弱类型：偏向于容忍隐式类型转换。譬如说C语言的int可以变成double
       静态类型：编译的时候就知道每一个变量的类型，因为类型错误而不能做的事情是语法错误。
       动态类型：编译的时候不知道每一个变量的类型，因为类型错误而不能做的事情是运行时错误。譬如说你不能对一个数字a写a[10]当数组用。


10.1 JavaScript简介
     JavaScript是一种弱类型语言

     常用JavaScript库：用Python执行JavaScript代码的效率非常低，既费时有费力，尤其是在处理规模较大的JavaScript代码时，如果有绕过JavaScript并直接解析它的方法（不需要执行它就可以获得信息）会非常实用，可以帮你避开一大堆javaScript的麻烦事。

     1）jQuery：70%最流行的网站（约200万）和约30%的其他网站（约2亿）都在用，  “The State of jQuery 2014”

          <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>

     2）Google Analytics：有一半的网站都在用,如果一个网站使用了 Google Analytics 或其他类似的网络分析系统,而你不想让网站知道你在采集数据,就要确保把那些分析工具的 cookie 或者所有 cookie 都关掉

     3）Google地图：API


10.3 处理重定向
     服务器端重定向一般都可以轻松地通过Python的urllib库解决，不需要使用Selenium，而客户端重定向却不能这样处理。它是有浏览器执行JavaScript完成的页面跳转，而不是服务器完成的跳转。

     示例http://pythonscraping.com/pages/javascript/redirectDemo2.html

     这个程序每半分钟检查一次网页，看看html标签还在不在，时限为10秒钟，不过检查的时间间隔和时限都可以根据实际情况随意调整。

 tips:重定向与转发的区别
        解释一　　

                    一句话，转发是服务器行为，重定向是客户端行为。为什么这样说呢，这就要看两个动作的工作流程：

                    转发过程：客户浏览器发送http请求----》web服务器接受此请求--》调用内部的一个方法在容器内部完成请求处理和转发动作----》
            将目标资源发送给客户；在这里，转发的路径必须是同一个web容器下的url，其不能转向到其他的web路径上去，中间传递的是自己的容器内
            的request。在客户浏览器路径栏显示的仍然是其第一次访问的路径，也就是说客户是感觉不到服务器做了转发的。转发行为是浏览器只做了一次访问请求。

            重定向过程：客户浏览器发送http请求----》web服务器接受后发送302状态码响应及对应新的location给客户浏览器--》客户浏览器发现是302响应，则自动再发送一个新的http请求，请求url是新的location地址----》服务器根据此请求寻找资源并发送给客户。在这里location可以重定向到任意URL，既然是浏览器重新发出了请求，则就没有什么request传递的概念了。在客户浏览器路径栏显示的是其重定向的路径，客户可以观察到地址的变化的。重定向行为是浏览器做了至少两次的访问请求的。

        解释二
        重定向，其实是两次request,
                第一次，客户端request   A,服务器响应，并response回来，告诉浏览器，你应该去B。这个时候IE可以看到地址变了，而且历史的回退按钮也亮了。
        重定向可以访问自己web应用以外的资源。在重定向的过程中，传输的信息会被丢失。

例子：


请求转发是服务器内部把对一个request/response的处理权，移交给另外一个
对于客户端而言，它只知道自己最早请求的那个A，而不知道中间的B，甚至C、D。 传输的信息不会丢失。

 例子：

        解释三
            假设你去办理某个执照，

            重定向：你先去了A局，A局的人说：“这个事情不归我们管，去B局”，然后，你就从A退了出来，自己乘车去了B局。

            转发：你先去了A局，A局看了以后，知道这个事情其实应该B局来管，但是他没有把你退回来，而是让你坐一会儿，自己到后面办公室联系了B的人，
                  让他们办好后，送了过来。